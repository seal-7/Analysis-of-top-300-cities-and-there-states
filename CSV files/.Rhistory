order(as.integer(val$r3))
val$r3
sort.int(as.integer(val$r3))
sort.int(as.integer(val$r3))[length(val$r3)]
sort.int(as.integer(val$r3))[length(val$r3)-1]
val
sort(val$r3)
sort(val$r3)[length(val$r3)-1]
sort(val$r3,decreasing = TRUE)[length(val$r3)-1]
r1
r2
r3
r4
data.frame(r1,r2,r3,r4)
r4=c(1,2,3,4)
data.frame(r1,r2,r3,r4)
val
(val$r1,val$r2)
c(val$r1,val$r2)
merge(val$r1,val$r2)
val
help("position")
help("Position()")
help("Position()")
val
sort.int(as.integer(val$r3))[length(val$r3)-1]
subset(val,(r3==(sort.int(as.integer(val$r3))[length(val$r3)-1])))
merge(subset(val,(r3==(sort.int(as.integer(val$r3))[length(val$r3)-1])))$r2,subset(val,(r3==(sort.int(as.integer(val$r3))[length(val$r3)-1])))$r4)
val
sort(val$r3)
sort(val$r3)[length(val$r3)]
sort(val$r3)[length(val$r3)-1]
subset(val,r3==sort(val$r3)[length(val$r3)-1])
subset(val,r3==sort(val$r3)[length(val$r3)-1])$r2
subset(val,r3==sort(val$r3)[length(val$r3)-1])$r4
merge(subset(val,r3==sort(val$r3)[length(val$r3)-1])$r2,subset(val,r3==sort(val$r3)[length(val$r3)-1])$r4)
val
sort(val$r3)
sort(val$r3)[length(val$r3)-2]
subset(val,r3==sort(val$r3)[length(val$r3)-2])
subset(val,r3==sort(val$r3)[length(val$r3)-2])$r2
subset(val,r3==sort(val$r3)[length(val$r3)-2])$r4
merge(subset(val,r3==sort(val$r3)[length(val$r3)-2])$r2,subset(val,r3==sort(val$r3)[length(val$r3)-2]),$r4)
merge(subset(val,r3==sort(val$r3)[length(val$r3)-2])$r2,subset(val,r3==sort(val$r3)[length(val$r3)-2])$r4)
d=c(1:2:18)
d=c(1:18:2)
d=c(1:18)
d=c(1:18:3)
help(c())
help("c()")
help("c")
help("seq")
seq(1,18,2)
seq(2,18,2)
seq(1,10,2)
source('~/Documents/rscript.R')
history
history()
x
v1
v2
v1=c(3,4 5)
v1=c(3,4 ,5)
v1
v2
data.frame(v1,v2)
x=data.frame(v1,v2)
x$v1
x$v2
x <- c(151, 174, 138, 186, 128, 136, 179, 163, 152, 131)
y <- c(63, 81, 56, 91, 47, 57, 76, 72, 62, 48)
help("abline()")
help("abline")
help("plot")
rel<-lm(y~x)
predict(132,rel)
predict(data.frame(x=132),rel)
source('~/Documents/rscript.R')
predict(rel,data.frame(x=132))
help("plot")
help("cex")
plot(x,y,cex=1.3,abline(rel))
plot(x,y,cex=1.3,abline(rel),pch=16)
plot(y,x,cex=1.3,abline(rel),pch=16)
plot(y,x,abline(rel),pch=16)
x
x <- c(151, 174, 138, 186, 128, 136, 179, 163, 152, 131)
y <- c(63, 81, 56, 91, 47, 57, 76, 72, 62, 48)
plot(y,x,abline(rel),pch=16)
plot(y,x,cex=1.3,abline(rel),pch=16)
plot(y,x,cex=1.3,abline(rel))
plot(y,x,cex=1.3,abline(lm(y~x)))
plot(x,y,cex=1.3,abline(rel))
x=data.frame(x=182)
predict(rel,x)
predict(lm(y~x),x)
predict(rel,x)
x<-c(10,20,30,40)
y<-c(5,15,6)
rel=lm(y~x)
relation<-lm(y~x)
x
y
x<-c(2,4,5,6)
y<-c(1,5,8,2)
rel<-lm(y~x)
a=data.frame(x=7)
predict(rel,a)
plot(x,y,col="blue",abline(rel),cex=1.3,pch=16)
plot(y,x,col="blue",abline(rel),cex=1.3,pch=16)
plot(y,x,col="blue",cex=1.3,pch=16)
r1=c(1,2,3,4,5)
sno=c(1,2,3,4,5)
name=c("raj","Sana","neha","neha","eha")
age=c(10,20,30,40,50)
x=data.frame(sno,name,age)
x
help("write.csv")
write.csv(x,file="/home/seal_7/Desktop/Neha.csv")
read.csv(file="/home/seal_7/Desktop/Neha.csv")
x=read.csv(file="/home/seal_7/Desktop/Neha.csv")
x
x$name
x[1]
x[3]
x[1][1]
class(x)
subset(x,sno==1)
subset(x,sno==2)
subset(x,sno==3)
subset(x,sno==3)$name
subset(x,sno==3)
subset(x,sno==3)$name
x
max(age)
min(age)
sort(x$age,decreasing = TRUE)
subset(x,age==max(x$age))
x
subset(x,age==max(x$age))$name
x=10
x=read.csv(file="/home/seal_7/Desktop/Neha.csv")
a=10
b=12
merge(a,b)
c(a,b)
c(subset(x,age==max(x$age))$name,subset(x,age==max(x$age))$age)
subset(x,age==max(x$age))$name
merge(subset(x,age==max(x$age))$name,subset(x,age==max(x$age))$age)
history
x
sort(x$age,decreasing = TRUE)
sort(x$age,decreasing = TRUE)[2]
sort(unique(x$age),decreasing = TRUE)[2]
val=c(10,20,30,30,40)
val=c(10,20,30,30,40,40)
sort(unique(val),decreasing = TRUE)[2]
val=c(10,20,30,30,40,40)
val=c(10,20,30,40,50)
sum(val)
avg(val)
mean(val)
avg=mean(val)
Mod(-1)
avg
val
Mod(avg-val)
min(Mod(avg-val))
Date City_Name Temp_Morning Temp_Evening Rain
3/1/2016 Hsp 30 25 F
3/1/2016 Jal 42 26 F
3/1/2016 Lud 30 24 Y
3/1/2016 Jag 30 27 F
3/1/2016 Amr 30 25 Y
4/1/2016 Hsp 32 26 F
4/1/2016 Jal 41 23 Y
4/1/2016 Lud 40 27 Y
4/1/2016 Jag 32 23 Y
4/1/2016 Amr 34 25 Y
5/1/2016 Hsp 30 25 F
5/1/2016 Jal 44 24 F
5/1/2016 Lud 37 23 F
5/1/2016 Jag 34 25 F
5/1/2016 Amr 32 22 F
6/2/2016 Jal 38 22 Y
6/2/2016 amr 30 24 Y
6/2/2016 Hsp 33 26 F
6/2/2016 Lud 38 28 F
6/2/2016 Jag 35 27 F
str="raj"
str
like
help(like)
str[0]
str(0)
str.at
nchar(str)
pos=grep(x$name=='N')
pos=grep('N',x$name)
pos
pos=grep('n',x$name)
pos
pos=grep('n',str)
pos
pos=regexpr('n',str)
pos
pos=regexpr('N',str)
pos
str="raj"
str1="sana"
str2="neha"
str+str1+str2
paste(str,str1,str2)
paste(str,str1,str2,sep=na)
paste(str,str1,str2,sep=NULL)
paste(str,str1,str2,collapse = "")
paste(str,str1,str2,sep="")
substring("Neha",1,1)
x
substring(x$name,1,1)=="N"
substring(x$name,1,1)
substring(x$name,1,1)=="n"
subset(x,substring(x$name,1,1)=="n")
subset(x,substring(x$name,1,1)=="n")$name
substring(x$name,1,3)
substring("NEHA SAINI",1,3)
substring("NEHA SAINI",1,1)
history()
write.csv(x,file="Desktop/try.csv",col.names = FALSE)
c
x
write.csv(x,file="/Desktop/try.csv",col.names = FALSE)
write.csv(x,file="Documents/try.csv",col.names = FALSE)
write.csv(x,file="Documents/try.csv")
help("write.csv")
write.csv(x,file="Documents/try.csv",row.names = FALSE)
drop(x$X)
x
drop(x$X)
x
name<-c("sno","name","age")
DF[name]
x[name]
str
"r"%in%str
"r" %in% str
"raj" %in% str
"j" %in% str
substring(str,1,1)
substring(str,2,2)
Mod(-1)
boxplot(mpg ~ cyl, data = mtcars, xlab = "Number of Cylinders",
ylab = "Miles Per Gallon", main = "Mileage Data")
v=c(1,3,5,7)
boxplot(v,xlab = "Number of Cylinders",
ylab = "Miles Per Gallon", main = "Mileage Data")
boxplot(v,xlab = "Number of Cylinders",
ylab = "Miles Per Gallon", main = "Mileage Data",notch = TRUE)
boxplot(v,xlab = "Number of Cylinders",
ylab = "Miles Per Gallon", main = "Mileage Data",notch = FALSE)
boxplot(v,xlab = "Number of Cylinders",
ylab = "Miles Per Gallon", main = "Mileage Data",notch = FALSE)
v
pie(v,labels = c(1,2,3,4))
pie(v,labels = c(1,2,3,4),col=rainbow(length(v)))
legend("topright",c(1,2,4))
f=c("raj","x","y","z")
legend("topright",f
)
legend("topright",f,col=rainbow(length(v)))
legend("topright",f,colors(rainbow(length(v)))
)
legend("topright",f,col=rainbow(length(f)))
legend("topright",f,fill =rainbow(length(f)))
piepercent=round(100*v/sum(v),1)
legend("topright",piepercent,col=rainbow(length(v)))
legend("topright",labels=piepercent,col=rainbow(length(v)))
pie(v,labels = piepercent,col=rainbow(length(v)))
legend("topright",labels=piepercent,col=rainbow(length(v)))
str
length(str)
legend("topright",f,fill =rainbow(length(f)))
strwidth(str)
x
x$X&x$age
x$X&&x$age
x$X%%x$age
x$X%x$age
mat1%*%mat2
x
c((1,2,3,3,4,4,4,4,5,5,6))
=arrc(1,2,3,3,4,4,4,4,5,5,6)
arr=c(1,2,3,3,4,4,4,4,5,5,6)
table(arr)
max(table(arr))
data.frame(table(arr))
max(data.frame(table(arr))$Freq)
subset(data.frame(table(arr)),Freq==max(data.frame(table(arr))$Freq))
Freq==max(data.frame(table(arr))$Freq)
max(data.frame(table(arr))$Freq)
subset(data.frame(table(arr)),Freq=max(data.frame(table(arr))$Freq))
subset(data.frame(table(arr)),max(data.frame(table(arr))$Freq))
subset(data.frame(table(arr)),data.frame(table(arr))$Freq==max(data.frame(table(arr))$Freq))
data=data.frame(table(arr))
subset(data,freq==max(data$freq))
subset(data,Freq==max(data$Freq))
subset(data,Freq==max(data$Freq))$arr
x=max(data$Freq)
x
x
data
which.max(data$Freq)
data$arr[which.max(data$Freq)]
plot(data$Freq,xlab = "Gaurav",ylab = "Raj",cex)
plot(data$Freq,xlab = "Gaurav",ylab = "Raj",cex=1.3)
barplot(data$Freq,xlab = "Gaurav",ylab = "Raj",cex=1.3)
barplot(data$Freq,xlab = "Gaurav",ylab = "Raj")
barplot(data$Freq,xlab = "Gaurav",ylab = "Raj",col = rainbow(6))
legend("topright",)
a=c("r","g","y","b","l",,"f")
a=c("r","g","y","b","l","f")
legend("topright",a)
legend("topright",a,fill=rainbow(6))
help("barplot")
barplot(data$Freq,xlab = "Gaurav",ylab = "Raj",col = rainbow(6),names.arg = c(1,2,3,4,5,6))
plot(data$Freq,xlab = "Gaurav",ylab = "Raj",cex=1.3)
x <- c(151, 174, 138, 186, 128, 136, 179, 163, 152, 131)
y <- c(63, 81, 56, 91, 47, 57, 76, 72, 62, 48)
plot(x,y)
plot(x,y,abline(y~x))
plot(x,y,abline(x~y))
plot(x,y,abline(x))
plot(x,y,abline(x~y))
plot(x,y,abline(lm(x~y)))
plot(x,y,abline(lm(y~x)))
rel=lm(y~x)
v=data.frame(y=100)
predict(rel,v)
predict(v,rel)
v
predict(rel,y)
rel=lm(y~x)
v=data.frame(x=190)
predict(rel,v)
val=c(6,24)
barplot(val,names.arg = c("God Exist","People Belive in God"),col=rainbow(length(val)))
val=c(24,6)
barplot(val,names.arg = c("God Exist","People Belive in God"),col=rainbow(length(val)),ylim = 30)
barplot(val,names.arg = c("God Exist","People Belive in God"),col=rainbow(length(val)),ylim = 30,xlim = 2)
barplot(val,names.arg = c("God Exist","People Belive in God"),col=rainbow(length(val)),ylim(0,30))
barplot(val,names.arg = c("God Exist","People Belive in God"),col=rainbow(length(val)),ylim=c(1:30)
)
c(1:30)
barplot(val,names.arg = c("God Exist","People Belive in God"),col=rainbow(length(val)),ylim = c(1:30))
help("barplot")
barplot(val,names.arg = c("God Exist","People Belive in God"),col=rainbow(length(val)),ylim = range(1:30))
barplot(val,names.arg = c("God Exist","People Belive in God"),col=rainbow(length(val)),ylim = range(1,30))
barplot(val,names.arg = c("God Exist","People Belive in God"),col=rainbow(length(val)),ylim = range(1:30))
barplot(val,names.arg = c("God Exist","People Belive in God"),col=rainbow(length(val)),ylim = range(1:10))
barplot(val,names.arg = c("God Exist","People Belive in God"),col=rainbow(length(val)),ylim = range(le-1:le-30))
source('/media/seal_7/New Volume/CYPHER/Misilineous/RScript/1sttime.R')
source('/media/seal_7/New Volume/CYPHER/Misilineous/RScript/1sttime.R')
source('/media/seal_7/New Volume/CYPHER/Misilineous/RScript/1sttime.R')
source('/media/seal_7/New Volume/CYPHER/Misilineous/RScript/1sttime.R')
source('/media/seal_7/New Volume/CYPHER/Misilineous/RScript/1sttime.R')
source('/media/seal_7/New Volume/CYPHER/Misilineous/RScript/1sttime.R')
source('/media/seal_7/New Volume/CYPHER/Misilineous/RScript/1sttime.R')
source('/media/seal_7/01D240BB26C0D780/R/SEM6 Project/scr1.R')
source('/media/seal_7/01D240BB26C0D780/R/SEM6 Project/scr1.R')
source('/media/seal_7/01D240BB26C0D780/R/SEM6 Project/scr1.R')
source('/media/seal_7/01D240BB26C0D780/R/SEM6 Project/scr1.R')
111111111111111111111111111111111111111+1111111111111111111111111111111111111111111
1111111111111111111111111111111111111111111111111111111111*888888888888888888888888888888888888888888888
source('/media/seal_7/01D240BB26C0D780/R/SEM6 Project/scr1.R')
install.packages("dygraphs")
source('/media/seal_7/01D240BB26C0D780/R/SEM6 Project/scr1.R')
source('/media/seal_7/01D240BB26C0D780/R/SEM6 Project/scr1.R')
library(dygraphs)
print cbind(population, states)
source('/media/seal_7/01D240BB26C0D780/R/SEM6 Project/scr1.R')
source('/media/seal_7/01D240BB26C0D780/R/SEM6 Project/scr1.R')
mdeaths
population
class(mdeaths)
as.ts(population)
source('/media/seal_7/01D240BB26C0D780/R/SEM6 Project/scr1.R')
mdeaths
source('/media/seal_7/01D240BB26C0D780/R/SEM6 Project/scr1.R')
dygraph(new)
source('/media/seal_7/01D240BB26C0D780/R/SEM6 Project/scr1.R')
install.packages("ggplot2")
source('/media/seal_7/01D240BB26C0D780/R/SEM6 Project/scr1.R')
library(ggplot2)
qpplot
source('/media/seal_7/01D240BB26C0D780/R/SEM6 Project/scr1.R')
source('/media/seal_7/01D240BB26C0D780/R/SEM6 Project/scr1.R')
source('/media/seal_7/01D240BB26C0D780/R/SEM6 Project/scr1.R')
help("qpplot")
codechefFile=read.csv("/root/Downloads/CYPHER SEPTEMBER/RScript/codeChefFile.csv");
rankData=read.csv("/root/Downloads/CYPHER SEPTEMBER/RScript/updated.csv");
n=length(codechefFile$User.handle)
m=length(rankData$USER_HANDLE)
codechefFile$Rating=0.0
codechefFile=codechefFile[order(codechefFile$Rank),]
for(i in 1:n){
for(j in 1:m){
if(identical(as.character(codechefFile$User.handle[i]),as.character(rankData$USER_HANDLE[j]))){
codechefFile$Rating[i]<-rankData$RATING[j]
}
}
if(codechefFile$Rating[i]==0){
codechefFile$Rating[i]=1000
}
}
for(i in 1:n){
sa=n - codechefFile$Rank[i]
ea=0
for(j in 1:n){
if(i!=j){
ea=ea+(1/(1+(10^((codechefFile$Rating[j]-codechefFile$Rating[i])/400))))
}
}
for(x in 1:m){
if(identical(as.character(codechefFile$User.handle[i]),as.character(rankData$USER_HANDLE[x]))){
pos=x;
break
}
pos=0
}
if(pos==0){
k=8
}
else if(rankData$RANK[pos]<=10){
k=2
}
else if(rankData$RANK[pos]<=20){
k=4
}
else {
k=8
}
codechefFile$Rating[i]=codechefFile$Rating[i]+(k*(sa-ea))
}
for(i in 1:n){
for(j in 1:m){
if(identical(as.character(codechefFile$User.handle[i]),as.character(rankData$USER_HANDLE[j]))){
rankData$RATING[j]=codechefFile$Rating[i];
codechefFile$User.handle[i]=NA
break;
}
}
}
#print(n)
for(i in 1:n){
if(!is.na(codechefFile$User.handle[i])){
print(codechefFile$User.handle[i])
row<-data.frame(as.integer(0),codechefFile$User.handle[i],codechefFile$Name[i],as.numeric(codechefFile$Rating[i]))
rankData <- rbind(rankData,setNames(row,names(rankData)))
print(row)
m=length(rankData$USER_HANDLE)
}
}
rankData=rankData[order(rankData$RATING,decreasing = TRUE),]
for(i in 1:m){
rankData$RANK[i]=i
}
write.csv(data.frame(rankData),"/root/Downloads/CYPHER SEPTEMBER/RScript/newupdated.csv",row.names = FALSE)
citys=read.csv("/media/seal_7/01D240BB26C0D780/R/SEM6 Project/cities_r2.csv")
library(ggplot2)
#print(names(citys))
x=data.frame(citys$population_total,citys$state_name)
states=unique(citys$state_name)
population=0
for (i in 1:length(states)) {
population[i]=0
for (j in 1:length(citys$state_name)) {
if(identical(as.character(states[i]),as.character(citys$state_name[j])))
population[i]= population[i]+ as.integer(citys$population_total)
}
}
print(data.frame(population,states))
ggplot(x=population,y=states,data=data.frame(population,states),xlim=c(13,90))+geom_point()
citys=read.csv("/media/seal_7/01D240BB26C0D780/R/SEM6 Project/cities_r2.csv")
library(ggplot2)
#print(names(citys))
x=data.frame(citys$population_total,citys$state_name)
states=unique(citys$state_name)
population=0
for (i in 1:length(states)) {
population[i]=0
for (j in 1:length(citys$state_name)) {
if(identical(as.character(states[i]),as.character(citys$state_name[j])))
population[i]= population[i]+ as.integer(citys$population_total)
}
}
print(data.frame(population,states))
ggplot(x=population,y=states,data=data.frame(population,states),xlim=c(13,90))+geom_point()
install.packages("highcharter")
source('/media/seal_7/01D240BB26C0D780/R/SEM6 Project/scr1.R')
source('/media/seal_7/01D240BB26C0D780/R/SEM6 Project/scr1.R')
source('/media/seal_7/01D240BB26C0D780/R/SEM6 Project/scr1.R')
install.packages("~/Downloads/highcharter_0.5.0.tar.gz", repos = NULL, type = "source")
install.packages("rlist")
install.packages("igraph")
install.packages("highcharter")
install.packages("igraph")
source('/media/seal_7/01D240BB26C0D780/R-Project/R files/malePopulation0-6.R')
setwd("/media/seal_7/01D240BB26C0D780/R-Project/CSV files")
source('/media/seal_7/01D240BB26C0D780/R-Project/R files/malePopulation0-6.R')
source('/media/seal_7/01D240BB26C0D780/R-Project/R files/femalePopultaion0-6.R')
source('/media/seal_7/01D240BB26C0D780/R-Project/R files/malePopulation0-6.R')
source('/media/seal_7/01D240BB26C0D780/R-Project/R files/femalePopultaion0-6.R')
